/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The frequency that employees on this pay schedule are paid with Gusto.
 */
export enum Frequency {
    EveryWeek = "Every week",
    EveryOtherWeek = "Every other week",
    TwicePerMonth = "Twice per month",
    Monthly = "Monthly",
}

export class PostV1CompaniesCompanyIdPaySchedulesRequestBody extends SpeakeasyBase {
    /**
     * The last date of the first pay period. This can be the same date as the anchor pay date.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "anchor_end_of_pay_period" })
    anchorEndOfPayPeriod: string;

    /**
     * The first date that employees on this pay schedule are paid with Gusto.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "anchor_pay_date" })
    anchorPayDate: string;

    /**
     * An integer between 1 and 31 indicating the first day of the month that employees are paid. This field is only relevant for pay schedules with the “Twice per month” and “Monthly” frequencies. It will be null for pay schedules with other frequencies.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "day_1" })
    day1?: number;

    /**
     * An integer between 1 and 31 indicating the second day of the month that employees are paid. This field is the second pay date for pay schedules with the “Twice per month” frequency. It will be null for pay schedules with other frequencies.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "day_2" })
    day2?: number;

    /**
     * The frequency that employees on this pay schedule are paid with Gusto.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "frequency" })
    frequency: Frequency;
}

export class PostV1CompaniesCompanyIdPaySchedulesRequest extends SpeakeasyBase {
    /**
     * The UUID of the company
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=company_id" })
    companyId: string;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: PostV1CompaniesCompanyIdPaySchedulesRequestBody;
}

export class PostV1CompaniesCompanyIdPaySchedulesResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Example response
     */
    @SpeakeasyMetadata()
    paySchedule?: shared.PaySchedule;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * Unprocessable Entity
     *
     * @remarks
     *
     * This may happen when the body of your request contains errors such as `invalid_attribute_value`, or the request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories) guide for more details.
     *
     */
    @SpeakeasyMetadata()
    unprocessableEntityErrorObject?: shared.UnprocessableEntityErrorObject;
}
