/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class Answers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "valid_from" })
    validFrom: string;

    @SpeakeasyMetadata()
    @Expose({ name: "valid_up_to" })
    validUpTo?: any;

    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value: string;
}

export class Questions extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: Answers })
    @Expose({ name: "answers" })
    @Type(() => Answers)
    answers?: Answers[];

    @SpeakeasyMetadata()
    @Expose({ name: "key" })
    key: string;
}

export class States extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: Questions })
    @Expose({ name: "questions" })
    @Type(() => Questions)
    questions?: Questions[];

    @SpeakeasyMetadata()
    @Expose({ name: "state" })
    state: string;
}

export class PutV1EmployeesEmployeeIdStateTaxesRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "employee_id" })
    employeeId: string;

    @SpeakeasyMetadata({ elemType: States })
    @Expose({ name: "states" })
    @Type(() => States)
    states: States[];
}

export class PutV1EmployeesEmployeeIdStateTaxesRequest extends SpeakeasyBase {
    /**
     * The UUID of the employee
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=employee_uuid" })
    employeeUuid: string;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: PutV1EmployeesEmployeeIdStateTaxesRequestBody;
}

export class PutV1EmployeesEmployeeIdStateTaxesAnswers extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "errors" })
    errors?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "valid_from" })
    validFrom: string;

    @SpeakeasyMetadata()
    @Expose({ name: "valid_up_to" })
    validUpTo?: any;
}

export class PutV1EmployeesEmployeeIdStateTaxesQuestions extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: PutV1EmployeesEmployeeIdStateTaxesAnswers })
    @Expose({ name: "answers" })
    @Type(() => PutV1EmployeesEmployeeIdStateTaxesAnswers)
    answers?: PutV1EmployeesEmployeeIdStateTaxesAnswers[];

    @SpeakeasyMetadata()
    @Expose({ name: "key" })
    key: string;
}

export class ResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: PutV1EmployeesEmployeeIdStateTaxesQuestions })
    @Expose({ name: "questions" })
    @Type(() => PutV1EmployeesEmployeeIdStateTaxesQuestions)
    questions: PutV1EmployeesEmployeeIdStateTaxesQuestions[];

    @SpeakeasyMetadata()
    @Expose({ name: "state" })
    state: string;
}

export class PutV1EmployeesEmployeeIdStateTaxesResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Example response
     */
    @SpeakeasyMetadata({ elemType: shared.EmployeeStateTax })
    classes?: shared.EmployeeStateTax[];

    /**
     * Unprocessable Entity (WebDAV)
     */
    @SpeakeasyMetadata({ elemType: ResponseBody })
    classes1?: ResponseBody[];
}
