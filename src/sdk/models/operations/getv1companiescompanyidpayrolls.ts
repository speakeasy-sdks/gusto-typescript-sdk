/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

export enum GetV1CompaniesCompanyIdPayrollsQueryParamInclude {
    Benefits = "benefits",
    Deductions = "deductions",
    PayrollStatusMeta = "payroll_status_meta",
    Taxes = "taxes",
}

export class GetV1CompaniesCompanyIdPayrollsRequest extends SpeakeasyBase {
    /**
     * The UUID of the company
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=company_id" })
    companyId: string;

    /**
     * Return payrolls whose pay period is before the end date
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=end_date" })
    endDate?: string;

    /**
     * Include the requested attribute in the response
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=include" })
    include?: GetV1CompaniesCompanyIdPayrollsQueryParamInclude[];

    /**
     * Whether to include off cycle payrolls in the response
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=include_off_cycle" })
    includeOffCycle?: boolean;

    /**
     * Whether to return processed or unprocessed payrolls
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=processed" })
    processed?: boolean;

    /**
     * Return payrolls whose pay period is after the start date
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=start_date" })
    startDate?: string;
}

export class GetV1CompaniesCompanyIdPayrollsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Example response
     */
    @SpeakeasyMetadata({ elemType: shared.Payroll })
    classes?: shared.Payroll[];
}
