/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The payment method type. If type is Direct Deposit, the contractor is required to have a bank account.
 *
 * @remarks
 * see [Bank account endpoint](./post-v1-contractors-contractor_uuid-bank_accounts)
 */
export enum TypeT {
    DirectDeposit = "Direct Deposit",
    Check = "Check",
}

export class PutV1ContractorsContractorIdPaymentMethodRequestBody extends SpeakeasyBase {
    /**
     * The payment method type. If type is Direct Deposit, the contractor is required to have a bank account.
     *
     * @remarks
     * see [Bank account endpoint](./post-v1-contractors-contractor_uuid-bank_accounts)
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: TypeT;

    /**
     * The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version: string;
}

export class PutV1ContractorsContractorIdPaymentMethodRequest extends SpeakeasyBase {
    /**
     * The UUID of the contractor
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=contractor_uuid" })
    contractorUuid: string;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: PutV1ContractorsContractorIdPaymentMethodRequestBody;
}

export class PutV1ContractorsContractorIdPaymentMethodResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Example response
     */
    @SpeakeasyMetadata()
    contractorPaymentMethod?: shared.ContractorPaymentMethod;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Unprocessable Entity
     *
     * @remarks
     *
     * This may happen when the body of your request contains errors such as `invalid_attribute_value`, or the request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories) guide for more details.
     *
     */
    @SpeakeasyMetadata()
    unprocessableEntityErrorObject?: shared.UnprocessableEntityErrorObject;
}
