/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The updated onboarding status for the employee
 */
export enum OnboardingStatus {
    OnboardingCompleted = "onboarding_completed",
}

export class PutV1ContractorsContractorUuidOnboardingStatusRequestBody extends SpeakeasyBase {
    /**
     * The updated onboarding status for the employee
     */
    @SpeakeasyMetadata()
    @Expose({ name: "onboarding_status" })
    onboardingStatus?: OnboardingStatus;
}

export class PutV1ContractorsContractorUuidOnboardingStatusRequest extends SpeakeasyBase {
    /**
     * The UUID of the contractor
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=contractor_uuid" })
    contractorUuid: string;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: PutV1ContractorsContractorUuidOnboardingStatusRequestBody;
}

/**
 * Example response.
 */
export class PutV1ContractorsContractorUuidOnboardingStatusResponseBody extends SpeakeasyBase {}

export class PutV1ContractorsContractorUuidOnboardingStatusResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    body?: Uint8Array;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Example response.
     */
    @SpeakeasyMetadata()
    contractorOnboardingStatus?: shared.ContractorOnboardingStatus;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Unprocessable Entity
     *
     * @remarks
     *
     * This may happen when the body of your request contains errors such as `invalid_attribute_value`, or the request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories) guide for more details.
     *
     */
    @SpeakeasyMetadata()
    unprocessableEntityErrorObject?: shared.UnprocessableEntityErrorObject;
}
