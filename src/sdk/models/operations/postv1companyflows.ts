/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
 */
export enum EntityType {
    Company = "Company",
    Employee = "Employee",
}

export class PostV1CompanyFlowsRequestBody extends SpeakeasyBase {
    /**
     * the type of target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "entity_type" })
    entityType?: EntityType;

    /**
     * UUID of the target entity applicable to the flow. This field is optional for company flows, please refer to the flow_types table above for more details.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "entity_uuid" })
    entityUuid?: string;

    /**
     * flow type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "flow_type" })
    flowType: string;
}

export class PostV1CompanyFlowsRequest extends SpeakeasyBase {
    /**
     * The UUID of the company
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=company_uuid" })
    companyUuid: string;

    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: PostV1CompanyFlowsRequestBody;
}

export class PostV1CompanyFlowsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Example response
     */
    @SpeakeasyMetadata()
    flow?: shared.Flow;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Unprocessable Entity
     *
     * @remarks
     *
     * This may happen when the body of your request contains errors such as `invalid_attribute_value`, or the request fails due to an `invalid_operation`. See the [Errors Categories](https://docs.gusto.com/embedded-payroll/docs/error-categories) guide for more details.
     *
     */
    @SpeakeasyMetadata()
    unprocessableEntityErrorObject?: shared.UnprocessableEntityErrorObject;
}
