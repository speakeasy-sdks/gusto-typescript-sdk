/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class TimeOffPolicyEmployees extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;
}

/**
 * Representation of a Time Off Policy
 */
export class TimeOffPolicy extends SpeakeasyBase {
  /**
   * Policy time off accrual method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accrual_method" })
  accrualMethod: string;

  /**
   * The rate at which the time off hours will accrue for an employee on the policy. Represented as a float, e.g. "40.0".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accrual_rate" })
  accrualRate?: string;

  /**
   * The number of hours an employee has to work or be paid for to accrue the number of hours set in the accrual rate. Only used for hourly policies (per_hour_paid, per_hour_paid_no_overtime, per_hour_work, per_hour_worked_no_overtime). Represented as a float, e.g. "40.0".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accrual_rate_unit" })
  accrualRateUnit?: string;

  /**
   * Number of days before an employee on the policy will begin accruing time off hours
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accrual_waiting_period_days" })
  accrualWaitingPeriodDays?: number;

  /**
   * The max number of hours and employee can carryover from one year to the next
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carryover_limit_hours" })
  carryoverLimitHours?: string;

  /**
   * unique identifier for the company owning the time off policy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company_uuid" })
  companyUuid: string;

  /**
   * boolean representing if a policy has completed configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complete" })
  complete?: boolean;

  /**
   * List of employee uuids under a time off policy
   */
  @SpeakeasyMetadata({ elemType: TimeOffPolicyEmployees })
  @Expose({ name: "employees" })
  @Type(() => TimeOffPolicyEmployees)
  employees: TimeOffPolicyEmployees[];

  /**
   * boolean representing if a policy is active or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_active" })
  isActive: boolean;

  /**
   * The max number of hours and employee can accrue in a year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_accrual_hours_per_year" })
  maxAccrualHoursPerYear?: string;

  /**
   * The max number of hours an employee can accrue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_hours" })
  maxHours?: string;

  /**
   * name of the time off policy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Boolean representing if an employees accrued time off hours will be paid out on termination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paid_out_on_termination" })
  paidOutOnTermination?: boolean;

  /**
   * Type of the time off policy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policy_type" })
  policyType: string;

  /**
   * unique identifier of a time off policy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid: string;

  /**
   * The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/versioning#object-layer) for information on how to use this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}
