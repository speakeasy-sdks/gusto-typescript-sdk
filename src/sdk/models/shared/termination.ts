/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The representation of a termination in Gusto.
 */
export class Termination extends SpeakeasyBase {
    /**
     * Whether the employee's termination has gone into effect.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "active" })
    active?: boolean;

    /**
     * Whether the employee's termination is cancelable. Cancelable is true if `run_termination_payroll` is false and `effective_date` is in the future.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "cancelable" })
    cancelable?: boolean;

    /**
     * The employee's last day of work.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "effective_date" })
    effectiveDate?: string;

    /**
     * The UUID of the employee to which this termination is attached.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "employee_uuid" })
    employeeUuid?: number;

    /**
     * If true, the employee should receive their final wages via an off-cycle payroll. If false, they should receive their final wages on their current pay schedule.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "run_termination_payroll" })
    runTerminationPayroll?: boolean;

    /**
     * The UUID of the termination object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "uuid" })
    uuid?: string;

    /**
     * The current version of the object. See the [versioning guide](https://docs.gusto.com/embedded-payroll/docs/idempotency) for information on how to use this field.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}
