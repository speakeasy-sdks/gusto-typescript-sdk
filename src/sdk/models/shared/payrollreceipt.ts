/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class PayrollReceiptEmployeeCompensations extends SpeakeasyBase {
  /**
   * The total child support garnishment for the pay period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "child_support_garnishment" })
  childSupportGarnishment?: string;

  /**
   * The first name of the employee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employee_first_name" })
  employeeFirstName?: string;

  /**
   * The last name of the employee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employee_last_name" })
  employeeLastName?: string;

  /**
   * The UUID of the employee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employee_uuid" })
  employeeUuid?: string;

  /**
   * The employee's net pay. Net pay paid by check is available for reference but is not included in the `["totals"]["net_pay_debit"]` amount.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "net_pay" })
  netPay?: string;

  /**
   * The employee's compensation payment method.\n\n`Check` `Direct Deposit`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_method" })
  paymentMethod?: string;

  /**
   * The total garnishments for the pay period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_garnishments" })
  totalGarnishments?: string;

  /**
   * The total reimbursement for the pay period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_reimbursement" })
  totalReimbursement?: string;

  /**
   * The total of employer and employee taxes for the pay period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_tax" })
  totalTax?: string;
}

/**
 * The licensed payroll processor
 */
export class PayrollReceiptLicensee extends SpeakeasyBase {
  /**
   * Always the fixed string "525 20th St"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * Always the fixed string "San Francisco"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Always the fixed string "Gusto, Zenpayroll Inc."
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Always the fixed string "4157778888"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * Always the fixed string "94107"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postal_code" })
  postalCode?: string;

  /**
   * Always the fixed string "CA"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;
}

export class PayrollReceiptTaxes extends SpeakeasyBase {
  /**
   * The total amount paid by both employer and employee for this tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: string;

  /**
   * The amount paid for this tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * The subtotals for the payroll.
 */
export class PayrollReceiptTotals extends SpeakeasyBase {
  /**
   * The total child support debit for the payroll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "child_support_debit" })
  childSupportDebit?: string;

  /**
   * The total company debit for the payroll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company_debit" })
  companyDebit?: string;

  /**
   * The total company net pay for the payroll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "net_pay_debit" })
  netPayDebit?: string;

  /**
   * The total reimbursements for the payroll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reimbursement_debit" })
  reimbursementDebit?: string;

  /**
   * The total tax debit for the payroll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_debit" })
  taxDebit?: string;
}

/**
 * Example response
 */
export class PayrollReceipt extends SpeakeasyBase {
  /**
   * A unique identifier of the company for the payroll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company_uuid" })
  companyUuid?: string;

  /**
   * The debit or funding date for the payroll
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debit_date" })
  debitDate?: string;

  /**
   * An array of employee compensations and withholdings for this payroll
   */
  @SpeakeasyMetadata({ elemType: PayrollReceiptEmployeeCompensations })
  @Expose({ name: "employee_compensations" })
  @Type(() => PayrollReceiptEmployeeCompensations)
  employeeCompensations?: PayrollReceiptEmployeeCompensations[];

  @SpeakeasyMetadata()
  @Expose({ name: "liability_of_licensee" })
  liabilityOfLicensee?: string;

  /**
   * Always the fixed string "ZenPayroll, Inc., dba Gusto is a licensed money transmitter. For more about Gustoâ€™s licenses and your state-specific rights to request information, submit complaints, dispute errors, or cancel transactions, visit our license page."
   */
  @SpeakeasyMetadata()
  @Expose({ name: "license" })
  license?: string;

  /**
   * URL for the license information for the licensed payroll processor. Always the fixed string "https://gusto.com/about/licenses"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "license_uri" })
  licenseUri?: string;

  /**
   * The licensed payroll processor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "licensee" })
  @Type(() => PayrollReceiptLicensee)
  licensee?: PayrollReceiptLicensee;

  /**
   * Always the fixed string "Payroll Recipients"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name_of_recipient" })
  nameOfRecipient?: string;

  /**
   * The name of the company by whom the payroll was paid
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name_of_sender" })
  nameOfSender?: string;

  /**
   * A unique identifier of the payroll receipt.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payroll_uuid" })
  payrollUuid?: string;

  /**
   * Always the fixed string "Payroll recipients include the employees listed below plus the tax agencies for the taxes listed below."
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recipient_notice" })
  recipientNotice?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "right_to_refund" })
  rightToRefund?: string;

  /**
   * An array of totaled employer and employee taxes for the pay period.
   */
  @SpeakeasyMetadata({ elemType: PayrollReceiptTaxes })
  @Expose({ name: "taxes" })
  @Type(() => PayrollReceiptTaxes)
  taxes?: PayrollReceiptTaxes[];

  /**
   * The subtotals for the payroll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totals" })
  @Type(() => PayrollReceiptTotals)
  totals?: PayrollReceiptTotals;
}
